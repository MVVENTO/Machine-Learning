# -*- coding: utf-8 -*-
"""StreetEndDetector_working.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ke-U1KrD1bgKALw_mwfdYtwFt_sYY4Gy

## **Street ends** - Custom DataSet

https://colab.research.google.com/github/roboflow-ai/yolov5-custom-training-tutorial/blob/main/yolov5-custom-training.ipynb#scrollTo=7iiObB2WCMh6

Note: Increased testing on half of dataset images, added more aumentation and annotated carefully. (excluding cars, trees, other objects that might obstruct views)

**Streetlight dataset**
"""

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="d6XLvYat4sv7cDuJOcZM")
project = rf.workspace("opal_v").project("street-end-dot-v2")
dataset = project.version(1).download("yolov5")

"""Setup and Install"""

# Commented out IPython magic to ensure Python compatibility.
#clone YOLOv5 and 
!git clone https://github.com/ultralytics/yolov5  # clone repo
# %cd yolov5
# %pip install -qr requirements.txt #install dependencies
# %pip install -q roboflow

import torch
import os
from IPython.display import Image, clear_output # to display images

from google.colab import drive
drive.mount('/content/drive')

from roboflow import Roboflow
rf = Roboflow(model_format="yolov5", notebook="ultralytics")

"""Set Up"""

# set up environment
os.environ["DATASET_DIRECTORY"] = "/content/datasets"

"""Get Dataset from Roboflow"""

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="d6XLvYat4sv7cDuJOcZM")
project = rf.workspace("opal_v").project("street-end-dot-v2")
dataset = project.version(1).download("yolov5")

"""Train The Yolo Model"""

!python train.py --img 416 --batch 16 --epochs 100 --data {dataset.location}/data.yaml --weights yolov5s.pt --cache

"""Show Training results

"""

# Commented out IPython magic to ensure Python compatibility.
# Start tensorboard 
# Launch after you have started training 
# logs save in the folder "runs
# %load_ext tensorboard
# %tensorboard --logdir runs

"""Prediction"""

!python detect.py --weights runs/train/exp/weights/best.pt --img 416 --conf 0.1 --source {dataset.location}/valid/images

"""

```
# This is formatted as code
```

Display 
interface 
images"""

# display interface on ALL test images

import glob
from IPython.display import Image, display

i = 0
# Choose the correct exp folder - see prev output block
for imageName in glob.glob('/content/yolov5/runs/detect/exp/*.jpg'): # assuming JPG
  i += 1 

  if i < 10:
    display(Image(filename=imageName))
    print("\n")
